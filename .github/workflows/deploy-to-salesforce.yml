name: Salesforce CI/CD Deploy (Selective)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository with full history
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3Ô∏è‚É£ Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install sfdx-cli@latest --global

      # 4Ô∏è‚É£ Authenticate with Salesforce Org using JWT
      - name: Authenticate with Salesforce Org
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx force:auth:jwt:grant \
            --client-id ${{ secrets.SF_CONSUMER_KEY }} \
            --jwt-key-file server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instance-url ${{ secrets.SF_INSTANCE_URL }} \
            --setalias ci-org \
            --setdefaultusername

      # 5Ô∏è‚É£ Detect changed metadata files
      - name: Detect changed metadata
        id: detect
        run: |
          echo "üîç Detecting changed metadata files..."
          git diff --name-only origin/main...HEAD > changed_files.txt || echo ""
          cat changed_files.txt

          # Apex classes/triggers (including meta files)
          APEX_FILES=$(grep -E "force-app/.+\.(cls|trigger)$" changed_files.txt || true)
          APEX_META=$(grep -E "force-app/.+-(cls|trigger)-meta\.xml$" changed_files.txt || true)

          # LWC and Aura components (deploy the parent folder)
          COMPONENT_DIRS=$(grep -E "force-app/.+/(lwc|aura)/" changed_files.txt | sed 's#/[^/]*$##' | sort -u || true)

          # Static resources
          STATIC_DIRS=$(grep -E "force-app/.+/staticresources/" changed_files.txt | sed 's#/[^/]*$##' | sort -u || true)

          # Export environment variables
          echo "APEX_FILES<<EOF" >> $GITHUB_ENV
          echo "$APEX_FILES $APEX_META" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "COMPONENT_DIRS<<EOF" >> $GITHUB_ENV
          echo "$COMPONENT_DIRS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "STATIC_DIRS<<EOF" >> $GITHUB_ENV
          echo "$STATIC_DIRS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # 6Ô∏è‚É£ Deploy Apex classes/triggers (with tests)
      - name: Deploy Apex Classes/Triggers
        if: env.APEX_FILES != ''
        run: |
          echo "üöÄ Deploying Apex files..."
          echo "$APEX_FILES" | tr ' ' '\n'
          sfdx project deploy start --source-dir "$APEX_FILES" --target-org ci-org --test-level RunLocalTests

      # 7Ô∏è‚É£ Deploy LWC/Aura components
      - name: Deploy LWC/Aura Components
        if: env.COMPONENT_DIRS != ''
        run: |
          echo "üöÄ Deploying LWC/Aura components..."
          for dir in $COMPONENT_DIRS; do
            echo "Deploying folder: $dir"
            sfdx project deploy start --source-dir "$dir" --target-org ci-org --test-level NoTestRun
          done

      # 8Ô∏è‚É£ Deploy Static Resources
      - name: Deploy Static Resources
        if: env.STATIC_DIRS != ''
        run: |
          echo "üöÄ Deploying Static Resources..."
          for dir in $STATIC_DIRS; do
            echo "Deploying folder: $dir"
            sfdx project deploy start --source-dir "$dir" --target-org ci-org --test-level NoTestRun
          done

      # 9Ô∏è‚É£ Skip deployment if nothing changed
      - name: Skip deploy
        if: env.APEX_FILES == '' && env.COMPONENT_DIRS == '' && env.STATIC_DIRS == ''
        run: echo "‚úÖ No Salesforce metadata changes detected. Skipping deployment."
