name: Salesforce CI/CD Deploy (Selective)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository (full history to detect changes)
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install sfdx-cli@latest --global

      # Step 4: Authenticate with Salesforce
      - name: Authenticate with Salesforce Org
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx force:auth:jwt:grant \
            --client-id ${{ secrets.SF_CONSUMER_KEY }} \
            --jwt-key-file server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instance-url ${{ secrets.SF_INSTANCE_URL }} \
            --setalias ci-org \
            --setdefaultusername


      # Step 5: Detect changed metadata files
      - name: Detect changed metadata
        id: detect
        run: |
          echo "🔍 Detecting changed metadata files..."
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep "^force-app")
          echo "$CHANGED_FILES"

          # Separate by type
          APEX_FILES=$(echo "$CHANGED_FILES" | grep "/classes/.*\.cls\|/classes/.*\.trigger" || true)
          LWC_DIRS=$(echo "$CHANGED_FILES" | grep "/lwc/" | xargs -n1 dirname | sort -u || true)
          AURA_DIRS=$(echo "$CHANGED_FILES" | grep "/aura/" | xargs -n1 dirname | sort -u || true)
          STATIC_DIRS=$(echo "$CHANGED_FILES" | grep "/staticresources/" | xargs -n1 dirname | sort -u || true)

          echo "Apex files: $APEX_FILES"
          echo "LWC dirs: $LWC_DIRS"
          echo "Aura dirs: $AURA_DIRS"
          echo "StaticResource dirs: $STATIC_DIRS"

          echo "APEX_FILES=$APEX_FILES" >> $GITHUB_ENV
          echo "LWC_DIRS=$LWC_DIRS" >> $GITHUB_ENV
          echo "AURA_DIRS=$AURA_DIRS" >> $GITHUB_ENV
          echo "STATIC_DIRS=$STATIC_DIRS" >> $GITHUB_ENV

      # Step 6: Deploy Apex classes/triggers if changed
      - name: Deploy Apex
        if: env.APEX_FILES != ''
        run: |
          echo "🚀 Deploying Apex files..."
          sf project deploy start \
            --source-dir $(echo $APEX_FILES | tr ' ' ',') \
            --target-org ${{ secrets.SF_USERNAME }} \
            --test-level RunLocalTests

      # Step 7: Deploy LWC if changed
      - name: Deploy LWC
        if: env.LWC_DIRS != ''
        run: |
          echo "🚀 Deploying LWC directories..."
          sf project deploy start \
            --source-dir $(echo $LWC_DIRS | tr ' ' ',') \
            --target-org ${{ secrets.SF_USERNAME }} \
            --test-level NoTestRun

      # Step 8: Deploy Aura if changed
      - name: Deploy Aura
        if: env.AURA_DIRS != ''
        run: |
          echo "🚀 Deploying Aura directories..."
          sf project deploy start \
            --source-dir $(echo $AURA_DIRS | tr ' ' ',') \
            --target-org ${{ secrets.SF_USERNAME }} \
            --test-level NoTestRun

      # Step 9: Deploy Static Resources if changed
      - name: Deploy Static Resources
        if: env.STATIC_DIRS != ''
        run: |
          echo "🚀 Deploying StaticResource directories..."
          sf project deploy start \
            --source-dir $(echo $STATIC_DIRS | tr ' ' ',') \
            --target-org ${{ secrets.SF_USERNAME }} \
            --test-level NoTestRun

      # Step 10: Skip deploy if nothing changed
      - name: Skip deploy
        if: env.APEX_FILES == '' && env.LWC_DIRS == '' && env.AURA_DIRS == '' && env.STATIC_DIRS == ''
        run: echo "✅ No Salesforce metadata changes detected. Skipping deployment."
