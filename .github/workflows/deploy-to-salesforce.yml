name: Salesforce CI/CD Deploy (Selective Files)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Salesforce CLI
        run: npm install sfdx-cli@latest --global

      - name: Authenticate with Salesforce Org
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx force:auth:jwt:grant \
            --client-id ${{ secrets.SF_CONSUMER_KEY }} \
            --jwt-key-file server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instance-url ${{ secrets.SF_INSTANCE_URL }} \
            --setalias ci-org \
            --setdefaultusername

      - name: Detect changed metadata
        id: detect
        run: |
          echo "🔍 Detecting changed metadata files..."
          git diff --name-only origin/main...HEAD > changed_files.txt || echo ""
          cat changed_files.txt

          # Apex classes/triggers
          APEX_FILES=$(grep -E "force-app/.+\.cls$|force-app/.+\.trigger$" changed_files.txt || true)
          META_FILES=$(grep -E "force-app/.+\.cls-meta.xml$|force-app/.+\.trigger-meta.xml$" changed_files.txt || true)

          # Aura/LWC components: deploy the folder
          COMPONENT_DIRS=$(grep -E "force-app/.+/(lwc|aura)/" changed_files.txt | xargs -n1 dirname | sort -u || true)

          # Export as environment variables for subsequent steps
          echo "APEX_FILES=$APEX_FILES" >> $GITHUB_ENV
          echo "META_FILES=$META_FILES" >> $GITHUB_ENV
          echo "COMPONENT_DIRS=$COMPONENT_DIRS" >> $GITHUB_ENV

      - name: Deploy Apex Classes / Triggers
        if: env.APEX_FILES != '' || env.META_FILES != ''
        run: |
          echo "🚀 Deploying Apex files..."
          for file in $APEX_FILES $META_FILES; do
            echo "Deploying $file"
            sfdx project deploy start --source-dir "$file" --target-org ci-org --test-level RunLocalTests
          done

      - name: Deploy LWC / Aura Components
        if: env.COMPONENT_DIRS != ''
        run: |
          echo "🚀 Deploying LWC/Aura components..."
          for dir in $COMPONENT_DIRS; do
            echo "Deploying folder $dir"
            sfdx project deploy start --source-dir "$dir" --target-org ci-org --test-level NoTestRun
          done
