name: Salesforce CI/CD Deploy (Selective)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install sfdx-cli@latest --global

      # Step 4: Authenticate with Salesforce
      - name: Authenticate with Salesforce Org
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx force:auth:jwt:grant \
            --client-id ${{ secrets.SF_CONSUMER_KEY }} \
            --jwt-key-file server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instance-url ${{ secrets.SF_INSTANCE_URL }} \
            --setalias ci-org \
            --setdefaultusername

      # Step 5: Detect changed directories
      - name: Detect changed metadata directories
        id: detect
        run: |
          echo "🔍 Checking changed metadata files between last 2 commits..."
          git diff --name-only HEAD^ HEAD > changed_files.txt || echo ""
          cat changed_files.txt

          # Extract unique folders for Salesforce metadata
          CHANGED_DIRS=$(grep "^force-app" changed_files.txt | xargs -n1 dirname | sort -u)
          if [ -z "$CHANGED_DIRS" ]; then
            echo "⚠️ No Salesforce metadata changes detected."
            exit 0
          fi
          echo "✅ Changed directories detected:"
          echo "$CHANGED_DIRS"

          # Save directories to a temporary file for looping
          echo "$CHANGED_DIRS" > dirs_to_deploy.txt

      # Step 6: Deploy changed directories
      - name: Deploy changed metadata
        run: |
          while read dir; do
            echo "🚀 Deploying $dir"
            sfdx project deploy start --source-dir "$dir" --target-org ci-org --test-level NoTestRun
          done < dirs_to_deploy.txt
